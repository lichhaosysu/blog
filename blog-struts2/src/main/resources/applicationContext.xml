<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
            http://www.springframework.org/schema/jdbc
            http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util-3.1.xsd">
	<!-- dataSource pool config -->
	<import resource="classpath:dataSource.xml" />
	
	<bean id="articleDao" class="com.lichhao.blog.dao.ArticleDao" depends-on="dataSource,jdbcTemplate"/>
	<bean id="commentDao" class="com.lichhao.blog.dao.CommentDao" depends-on="dataSource"/>
	<bean id="tagDao" class="com.lichhao.blog.dao.TagDao" depends-on="dataSource"/>
	<bean id="userDao" class="com.lichhao.blog.dao.UserDao" depends-on="dataSource"/>
	<bean id="categoryDao" class="com.lichhao.blog.dao.CategoryDao" depends-on="dataSource"/>
	
	<!-- scans the classpath for annotated components (including @Repostory 
		and @Service that will be auto-registered as Spring beans -->
	<context:component-scan base-package="com.lichhao.blog">
		<context:include-filter type="regex"
			expression="com\.lichhao\.blog\.action.*" />
		<context:include-filter type="regex"
			expression="com\.lichhao\.blog\.service.*" />
		<context:include-filter type="regex"
			expression="com\.lichhao\.blog\.dao.*" />
	</context:component-scan>
	
	<!-- This will ensure that hibernate or jpa exceptions are automatically 
		translated into Spring's generic DataAccessException hierarchy for those 
		classes annotated with Repository For example see PersonDaoJpa -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<!-- JPA Entity Manager Factory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" />
		<property name="persistenceUnitName" value="blogPersistenceUnit" />
		<!-- TODO：启用这个属性会冲突报错，具体原因有待查证 -->
		<!--<property name="packagesToScan" value="com.lichhao.blog.model" /> -->
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="false" />
				<property name="database" value="H2" />
			</bean>
		</property>
	</bean>
	<!-- Transaction Config -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" />
	<!-- use declarative transaction management -->
	<!-- methods or classes needing to run in a complete transaction will be 
		annotated with Transactional -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>